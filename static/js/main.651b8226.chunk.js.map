{"version":3,"sources":["components/card-list/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","components/scroll/Scroll.js","core/error/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","cardComponent","robots","map","robot","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","resp","json","users","filteredRobots","filter","toLowerCase","includes","console","log","length","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"iPAgBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAExB,OACE,sBAAKC,UAAU,kDAAf,UACE,qBAAKC,IAAG,kCAA6BJ,GAAMK,IAAI,iBAC/C,gCACE,6BAAKJ,IACL,4BAAIC,WCQGI,EAfE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACWC,KAAI,SAACC,GAChC,OAAO,cAAC,EAAD,CAELV,GAAIU,EAAMV,GACVC,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OAHRQ,EAAMV,OAOf,OAAO,8BACJO,KCJUI,EARG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBAAOA,UAAU,oCAAoCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCMhGI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACGJ,EAAMK,a,oCCmBEC,E,kDAtBb,WAAYN,GAAQ,IAAD,8BACjB,gBACKO,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CACZJ,UAAU,M,+BAKZ,OAAIG,KAAKJ,MAAMC,SACN,wDAEFG,KAAKX,MAAMK,a,GAlBKQ,IAAMC,WC2ClBC,MApCf,WAAiB,IAAD,EACcC,mBAAS,IADvB,mBACP1B,EADO,KACC2B,EADD,OAEwBD,mBAAS,IAFjC,mBAEPE,EAFO,KAEMC,EAFN,KAIdC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAIR,EAAWQ,QAC5B,IAGF,IAIMC,EAAiBpC,EAAOqC,QAAO,SAACrC,GAAD,OACnCA,EAAOP,KAAK6C,cAAcC,SAASX,EAAYU,kBAIjD,OAFAE,QAAQC,IAAIzC,GAEHA,EAAO0C,OAId,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAfQ,SAACsC,GACtBd,EAAgBc,EAAMC,OAAOC,UAe3B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU7C,OAAQoC,WARxB,8CCpBJU,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,eAAe,W","file":"static/js/main.651b8226.chunk.js","sourcesContent":["import React from 'react';\r\n// import * from './Card.css'\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5\">\r\n      <img src={`https://robohash.org/ass${id}`} alt=\"robot imagen\"></img>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card/Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((robot) => {\r\n    return <Card\r\n      key={robot.id}\r\n      id={robot.id}\r\n      name={robot.name}\r\n      email={robot.email}\r\n    />\r\n  })\r\n  \r\n  return <div>\r\n    {cardComponent}\r\n  </div>;\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input className=\"pa3 ba b--greeen bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY:'scroll', border: '3px solid black', height:'500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      hasError: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops. That is not good</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\r\n\r\nimport CardList from '../components/card-list/CardList';\r\nimport SearchBox from '../components/search-box/SearchBox';\r\nimport Scroll from '../components/scroll/Scroll'\r\n\r\nimport './App.css'\r\nimport ErrorBoundry from '../core/error/ErrorBoundry';\r\n\r\nfunction App () {\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchfield, setSearchfield] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(resp => resp.json())\r\n      .then(users => setRobots( users))\r\n  },[]) // only run if [something] changes\r\n\r\n  // Recuerda que usamos un ARROW FUNCTION para que obtenga el THIS del \"sitio\" en el que se ha creado, NO de donde se invoca (en este caso en SearchBox Component)\r\n  const onSearchChange = (event) => {\r\n    setSearchfield( event.target.value)\r\n  }\r\n    \r\n  const filteredRobots = robots.filter((robots) =>\r\n    robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n  );\r\n  console.log(robots)\r\n  \r\n  return (!robots.length) ? \r\n    <h1>Loading ...</h1>\r\n  :\r\n    (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n      <SearchBox searchChange={onSearchChange}></SearchBox>\r\n      <Scroll>\r\n        <ErrorBoundry>\r\n          <CardList robots={filteredRobots}></CardList>\r\n        </ErrorBoundry>\r\n      </Scroll>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\n\n// Debemos importarlo con 'destructuring' porque en este caso son m√∫ltiples los datos que pueden venir del archivo seleccionado\n\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App></App>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}